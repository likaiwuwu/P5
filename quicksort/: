let values = [];
let w = 10;

let states = [];

function setup() {
	createCanvas(windowWidth, windowHeight);
	values = new Array(floor(width / w));
	for (let i = 0; i < values.length; i++) {
		values[i] = random(height);
	}

	frameRate(5);
	quickSort(values, 0, values.length - 1);
}

async function quickSort(arr, start, end) {
	if (start >= end) {
		return;
	}
	let index = await partition(arr, start, end);

	await Promise.all([	
		await quickSort(arr, start, index - 1);
		await quickSort(arr, index + 1, end);
	])
}

async function partition(arr, start, end) {
	let pivotIndex = start;
	let pivotValue = arr[end];
	for (let i = start; i < end; i++) {
		if (arr[i] < pivotValue) {
			await swap(arr, i, pivotIndex);
			pivotIndex++;
		}
	}
	await swap(arr, pivotIndex, end);
	return pivotIndex;
}
	


function draw() {
	background(0);
	
	for (let i = 0; i < values.length; i++) {
		stroke(255);
		line(i, height, i, height - values[i]);
	}
}

async function swap(array, a, b) {
	await sleep(500);
	let temp = array[a];
	array[a] = array[b];
	array[b] = temp;
}

function sleep(ms) {
	return new Promise(resolve => setTimeout(resolve, ms));
}
